$date
	Thu Aug 22 07:50:13 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb $end
$var wire 16 ! y [15:0] $end
$var wire 1 " busy $end
$var reg 8 # a [7:0] $end
$var reg 8 $ b [7:0] $end
$var reg 1 % clk $end
$var reg 1 & init $end
$var reg 1 ' reset $end
$scope module dut $end
$var wire 8 ( a [7:0] $end
$var wire 8 ) b [7:0] $end
$var wire 1 % clk $end
$var wire 1 & init $end
$var wire 1 ' reset $end
$var wire 17 * z [16:0] $end
$var wire 16 + y [15:0] $end
$var wire 3 , x [2:0] $end
$var wire 8 - m [7:0] $end
$var wire 8 . c [7:0] $end
$var wire 1 " busy $end
$scope module ac $end
$var wire 1 % clk $end
$var wire 1 & init $end
$var wire 8 / q [7:0] $end
$var wire 1 ' reset $end
$var wire 8 0 m [7:0] $end
$var wire 1 " busy $end
$var reg 17 1 a [16:0] $end
$upscope $end
$scope module be $end
$var wire 17 2 a [16:0] $end
$var wire 16 3 y [15:0] $end
$var wire 3 4 x [2:0] $end
$upscope $end
$scope module ir $end
$var wire 8 5 a_in [7:0] $end
$var wire 1 % clk $end
$var wire 1 & init $end
$var wire 1 ' reset $end
$var reg 8 6 a_out [7:0] $end
$upscope $end
$scope module pp $end
$var wire 8 7 a [7:0] $end
$var wire 3 8 x [2:0] $end
$var reg 8 9 m [7:0] $end
$upscope $end
$scope module sc $end
$var wire 1 % clk $end
$var wire 1 & init $end
$var wire 1 ' reset $end
$var reg 4 : a [3:0] $end
$var reg 1 " busy $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx :
bx 9
bx 8
bx 7
bx 6
b0 5
bx 4
bx 3
bx 2
bx 1
bx 0
b0 /
bx .
bx -
bx ,
bx +
bx *
b0 )
b0 (
1'
0&
0%
b0 $
b0 #
x"
bx !
$end
#5000
0"
b0 -
b0 0
b0 9
b0 ,
b0 4
b0 8
b0 !
b0 +
b0 3
b0 :
b0 .
b0 6
b0 7
b0 *
b0 1
b0 2
1%
#10000
b11111011 $
b11111011 )
b11111011 /
b11110101 #
b11110101 (
b11110101 5
0%
0'
#15000
1%
#20000
0%
1&
#25000
1"
b1011 -
b1011 0
b1011 9
b110 ,
b110 4
b110 8
b11111011 !
b11111011 +
b11111011 3
b100 :
b11110101 .
b11110101 6
b11110101 7
b111110110 *
b111110110 1
b111110110 2
1%
#30000
0%
0&
#35000
b101 ,
b101 4
b101 8
b1011111110 !
b1011111110 +
b1011111110 3
b10111111101 *
b10111111101 1
b10111111101 2
b11 :
1%
#40000
0%
#45000
b0 -
b0 0
b0 9
b111 ,
b111 4
b111 8
b1101111111 !
b1101111111 +
b1101111111 3
b10 :
b11011111111 *
b11011111111 1
b11011111111 2
1%
#50000
0%
#55000
b11011111 !
b11011111 +
b11011111 3
b110111111 *
b110111111 1
b110111111 2
b1 :
1%
#60000
0%
#65000
0"
b110111 !
b110111 +
b110111 3
b0 :
b1101111 *
b1101111 1
b1101111 2
1%
#70000
0%
#75000
1%
#80000
0%
1'
#85000
b0 ,
b0 4
b0 8
b0 !
b0 +
b0 3
b0 .
b0 6
b0 7
b0 *
b0 1
b0 2
1%
#90000
b101 $
b101 )
b101 /
0%
0'
#95000
1%
#100000
0%
1&
#105000
1"
b11110101 -
b11110101 0
b11110101 9
b10 ,
b10 4
b10 8
b101 !
b101 +
b101 3
b100 :
b11110101 .
b11110101 6
b11110101 7
b1010 *
b1010 1
b1010 2
1%
#110000
0%
0&
#115000
b1111110101000001 !
b1111110101000001 +
b1111110101000001 3
b11111101010000010 *
b11111101010000010 1
b11111101010000010 2
b11 :
1%
#120000
0%
#125000
b0 -
b0 0
b0 9
b0 ,
b0 4
b0 8
b1111110010010000 !
b1111110010010000 +
b1111110010010000 3
b10 :
b11111100100100000 *
b11111100100100000 1
b11111100100100000 2
1%
#130000
0%
#135000
b1111111100100100 !
b1111111100100100 +
b1111111100100100 3
b11111111001001000 *
b11111111001001000 1
b11111111001001000 2
b1 :
1%
#140000
0%
#145000
b11110101 -
b11110101 0
b11110101 9
0"
b10 ,
b10 4
b10 8
b1111111111001001 !
b1111111111001001 +
b1111111111001001 3
b0 :
b11111111110010010 *
b11111111110010010 1
b11111111110010010 2
1%
#150000
0%
#155000
1%
#160000
0%
#165000
1%
#170000
0%
#175000
1%
#180000
0%
#185000
1%
#190000
0%
#195000
1%
#200000
0%
#205000
1%
#210000
0%
